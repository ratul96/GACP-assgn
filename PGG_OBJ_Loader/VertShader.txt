#version 430 core
// Per-vertex inputs
layout(location = 0) in vec3 vPosition;
layout(location = 1) in vec3 vNormalIn;
layout(location = 2) in vec2 vTexCoordIn;

// Uniform data inputs are the same for all vertices
uniform mat4 modelMat;
uniform mat4 invModelMat;
uniform mat4 viewMat;
uniform mat4 projMat;


// These per-vertex outputs must correspond to the per-fragment inputs in the fragment shader
out vec3 vNormalV;
out vec2 texCoord;
out vec3 FragPos;

void main()
{
	// Pass through the texture coordinate
	texCoord = vTexCoordIn;

	FragPos=vec3(modelMat*vec4(vPosition,1.0));

	// Vertex normal, in eye-space
	vNormalV = mat3(modelMat) * vNormalIn;


	// Perform vertex transformations
	gl_Position = projMat * viewMat *vec4(vPosition,1.0);

	
	
	

	

	
}

